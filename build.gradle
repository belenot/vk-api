plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'com.bmuschko.docker-remote-api' version '6.7.0'
}

group 'com.belenot.service.vk'


repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation('com.vk.api:sdk:1.0.8') {
        exclude group: 'org.apache.logging.log4j'
    }
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'com.sksamuel.hoplite:hoplite-core:1.3.13'
    implementation 'com.sksamuel.hoplite:hoplite-yaml:1.3.13'
    implementation 'khttp:khttp:1.0.0'
    implementation 'org.postgresql:postgresql:42.2.18'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'io.ktor:ktor-server-core:1.5.0'
    implementation 'io.ktor:ktor-server-netty:1.5.0'
    implementation 'io.ktor:ktor-jackson:1.5.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.1'

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes "Main-Class": "com.belenot.service.vk.AppKt"
    }
}

shadowJar.doLast {
    copy {
        from("build/libs/vk-api-all.jar")
        into("docker/")
        rename { "app.jar" }
    }
}

import com.bmuschko.gradle.docker.tasks.image.*

task buildImage(type: DockerBuildImage) {
    inputDir = file('docker/')
    images.add('belenot/vk-api:latest')
}

task pushImage(type: DockerPushImage) {
    images.add('belenot/vk-api:latest')
}

task deploy(type: Exec) {
    commandLine 'kubectl', 'apply', '-f', 'kubernetes/vk-api.yml'
}