---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vk-api
  labels:
    app: vk-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vk-api
  template:
    metadata:
      annotations:
#        sidecar.istio.io/inject: 'false'
      labels:
        app: vk-api
    spec:
      volumes:
      - name: vk-api
        configMap:
          name: vk-api
      containers:
      - name: vk-api
        image: belenot/vk-api
        volumeMounts:
        - name: vk-api
          mountPath: /etc/vk-api/
        livenessProbe:
          periodSeconds: 1
          httpGet:
            path: /health
            port: 8080
        env:
        - name: vkAppId
          valueFrom:
            secretKeyRef:
              name: vk-api
              key: vkAppId
        - name: vkToken
          valueFrom:
            secretKeyRef:
              name: vk-api
              key: vkToken
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: vk-api
spec:
  selector:
    app: vk-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: getambassador.io/v2
kind:  Mapping
metadata:
  name:  vk-api
spec:
  prefix: /vk-api/
  service: http://vk-api.default
---
apiVersion: v1
kind: Secret
metadata:
  name: vk-api
stringData:
  vkAppId: 
  vkToken: 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vk-api
data:
  application.yml: |-
    vkApi:
      token: ${vkToken}
      appId: ${vkAppId}
    usersScrape:
      interval: 10
    db:
      #  url: jdbc:postgresql://localhost/vk_api_client
      url: jdbc:h2:mem:vk_api_client;INIT=RUNSCRIPT FROM 'classpath:/script.sql'
      username: sa
      password: ''
    server:
      port: 8080
    sidecarHealthCheck:
      port: 15021
      path: /healthz/ready
      enabled: true
